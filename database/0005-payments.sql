-- migrate:up

-- The max ADA supply is 45 * 10^9 ADA, and ADA is divisible to six decimal
-- places, so it has 2 + 9 + 6 = 17 decimals.
CREATE DOMAIN ada AS numeric(17, 6);

-- See https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki#bech32.
CREATE DOMAIN bech32 AS text CHECK (VALUE ~ '^[!-~]{1,83}1[02-9ac-hj-np-z]{6,}$');

CREATE TABLE creator_receive_addresses
(
    address    bech32      NOT NULL PRIMARY KEY,
    creator_id uuid        NOT NULL REFERENCES creators (id),
    created    timestamptz NOT NULL
);

COMMENT ON TABLE creator_receive_addresses IS '
    Cardano address where the creator would like to receive payments. Can hold
    multiple addresses per creator; the one with the greatest timestamp is the
    current one, all others are historic.
';

-- Index for looking up the current address of a creator.
CREATE INDEX ix_creator_receive_addresses_creator_id_created ON
    creator_receive_addresses (creator_id, created);

CREATE FUNCTION creator_current_receive_address(uuid)
    RETURNS bech32
    LANGUAGE SQL
    STABLE
    RETURNS NULL ON NULL INPUT
    PARALLEL SAFE
    AS $$
        SELECT address
        FROM creator_receive_addresses
        WHERE creator_id = $1
        ORDER BY created DESC
        LIMIT 1
    $$;

CREATE TABLE wallet_addresses
(
    id      bigint      NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    address bech32      NOT NULL UNIQUE,
    created timestamptz NOT NULL,
    purpose text        NOT NULL
);

COMMENT ON TABLE wallet_addresses IS '
    The wallet can generate a key from an index, so we have one namespace of
    integers for all of our addresses. We track the meaning of those in the
    database, so we have a single place to "claim" a new key.
';

CREATE TABLE payment_requests
(
    id                      uuid        NOT NULL,
    commission_address      bech32      NOT NULL REFERENCES wallet_addresses (address),
    creator_receive_address bech32      NOT NULL REFERENCES creator_receive_addresses (address),
    creator_amount_ada      ada         NOT NULL,
    commission_amount_ada   ada         NOT NULL,
    created                 timestamptz NOT NULL,
    fill_time               timestamptz NULL,
    fill_transaction        TEXT        NULL,

    CONSTRAINT payment_requests_fill_all
        CHECK ((fill_time IS NULL) = (fill_transaction IS NULL))
);

COMMENT ON COLUMN payment_requests.creator_amount_ada IS
    'Amount of ADA that must be spent to the creator receive address.';

COMMENT ON COLUMN payment_requests.commission_amount_ada IS
    'Amount of ADA that must be spent to the commission address.';

COMMENT ON COLUMN payment_requests.fill_time IS
    'Instant at which we learned that the payment was filled.';

COMMENT ON COLUMN payment_requests.fill_transaction IS
    'Transaction id of the Cardano transaction that fills the payment.';

-- migrate:down

DROP TABLE payment_requests;
DROP TABLE wallet_addresses;
DROP TABLE creator_receive_addresses;

DROP DOMAIN bech32;
DROP DOMAIN ada;
